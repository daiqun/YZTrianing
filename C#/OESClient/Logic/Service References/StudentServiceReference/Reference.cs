//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logic.StudentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentSelect", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StudentSelect : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentSortDirctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentSortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((object.ReferenceEquals(this.IsFinishedField, value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentSortDirction {
            get {
                return this.StudentSortDirctionField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentSortDirctionField, value) != true)) {
                    this.StudentSortDirctionField = value;
                    this.RaisePropertyChanged("StudentSortDirction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentSortName {
            get {
                return this.StudentSortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentSortNameField, value) != true)) {
                    this.StudentSortNameField = value;
                    this.RaisePropertyChanged("StudentSortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentExam", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class StudentExam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamSocreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveTime {
            get {
                return this.EffectiveTimeField;
            }
            set {
                if ((this.EffectiveTimeField.Equals(value) != true)) {
                    this.EffectiveTimeField = value;
                    this.RaisePropertyChanged("EffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamName {
            get {
                return this.ExamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNameField, value) != true)) {
                    this.ExamNameField = value;
                    this.RaisePropertyChanged("ExamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamSocre {
            get {
                return this.ExamSocreField;
            }
            set {
                if ((this.ExamSocreField.Equals(value) != true)) {
                    this.ExamSocreField = value;
                    this.RaisePropertyChanged("ExamSocre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((this.OperationField.Equals(value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassCriteria {
            get {
                return this.PassCriteriaField;
            }
            set {
                if ((this.PassCriteriaField.Equals(value) != true)) {
                    this.PassCriteriaField = value;
                    this.RaisePropertyChanged("PassCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exam", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Exam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveTime {
            get {
                return this.EffectiveTimeField;
            }
            set {
                if ((this.EffectiveTimeField.Equals(value) != true)) {
                    this.EffectiveTimeField = value;
                    this.RaisePropertyChanged("EffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExamName {
            get {
                return this.ExamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExamNameField, value) != true)) {
                    this.ExamNameField = value;
                    this.RaisePropertyChanged("ExamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notice {
            get {
                return this.NoticeField;
            }
            set {
                if ((object.ReferenceEquals(this.NoticeField, value) != true)) {
                    this.NoticeField = value;
                    this.RaisePropertyChanged("Notice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassCriteria {
            get {
                return this.PassCriteriaField;
            }
            set {
                if ((this.PassCriteriaField.Equals(value) != true)) {
                    this.PassCriteriaField = value;
                    this.RaisePropertyChanged("PassCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionPoints {
            get {
                return this.QuestionPointsField;
            }
            set {
                if ((this.QuestionPointsField.Equals(value) != true)) {
                    this.QuestionPointsField = value;
                    this.RaisePropertyChanged("QuestionPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionQuantity {
            get {
                return this.QuestionQuantityField;
            }
            set {
                if ((this.QuestionQuantityField.Equals(value) != true)) {
                    this.QuestionQuantityField = value;
                    this.RaisePropertyChanged("QuestionQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalScore {
            get {
                return this.TotalScoreField;
            }
            set {
                if ((this.TotalScoreField.Equals(value) != true)) {
                    this.TotalScoreField = value;
                    this.RaisePropertyChanged("TotalScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestingContent", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TestingContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChoiceAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChoiceBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChoiceCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChoiceDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrectAnwserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDelecteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChoiceA {
            get {
                return this.ChoiceAField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoiceAField, value) != true)) {
                    this.ChoiceAField = value;
                    this.RaisePropertyChanged("ChoiceA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChoiceB {
            get {
                return this.ChoiceBField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoiceBField, value) != true)) {
                    this.ChoiceBField = value;
                    this.RaisePropertyChanged("ChoiceB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChoiceC {
            get {
                return this.ChoiceCField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoiceCField, value) != true)) {
                    this.ChoiceCField = value;
                    this.RaisePropertyChanged("ChoiceC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChoiceD {
            get {
                return this.ChoiceDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoiceDField, value) != true)) {
                    this.ChoiceDField = value;
                    this.RaisePropertyChanged("ChoiceD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorrectAnwser {
            get {
                return this.CorrectAnwserField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrectAnwserField, value) != true)) {
                    this.CorrectAnwserField = value;
                    this.RaisePropertyChanged("CorrectAnwser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDelecte {
            get {
                return this.IsDelecteField;
            }
            set {
                if ((this.IsDelecteField.Equals(value) != true)) {
                    this.IsDelecteField = value;
                    this.RaisePropertyChanged("IsDelecte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionContent {
            get {
                return this.QuestionContentField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionContentField, value) != true)) {
                    this.QuestionContentField = value;
                    this.RaisePropertyChanged("QuestionContent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamRecord", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ExamRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExamScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAnwserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveTime {
            get {
                return this.EffectiveTimeField;
            }
            set {
                if ((this.EffectiveTimeField.Equals(value) != true)) {
                    this.EffectiveTimeField = value;
                    this.RaisePropertyChanged("EffectiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamId {
            get {
                return this.ExamIdField;
            }
            set {
                if ((this.ExamIdField.Equals(value) != true)) {
                    this.ExamIdField = value;
                    this.RaisePropertyChanged("ExamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExamScore {
            get {
                return this.ExamScoreField;
            }
            set {
                if ((this.ExamScoreField.Equals(value) != true)) {
                    this.ExamScoreField = value;
                    this.RaisePropertyChanged("ExamScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmitTime {
            get {
                return this.SubmitTimeField;
            }
            set {
                if ((this.SubmitTimeField.Equals(value) != true)) {
                    this.SubmitTimeField = value;
                    this.RaisePropertyChanged("SubmitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAnwser {
            get {
                return this.UserAnwserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAnwserField, value) != true)) {
                    this.UserAnwserField = value;
                    this.RaisePropertyChanged("UserAnwser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExamAbout", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ExamAbout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactUsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExaminationRulesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemInformationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactUs {
            get {
                return this.ContactUsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactUsField, value) != true)) {
                    this.ContactUsField = value;
                    this.RaisePropertyChanged("ContactUs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExaminationRules {
            get {
                return this.ExaminationRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminationRulesField, value) != true)) {
                    this.ExaminationRulesField = value;
                    this.RaisePropertyChanged("ExaminationRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemInformation {
            get {
                return this.SystemInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemInformationField, value) != true)) {
                    this.SystemInformationField = value;
                    this.RaisePropertyChanged("SystemInformation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.rick.com/", ConfigurationName="StudentServiceReference.IStudentService")]
    public interface IStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/StudentExam", ReplyAction="http://www.rick.com/IStudentService/StudentExamResponse")]
        Logic.StudentServiceReference.StudentExam[] StudentExam(Logic.StudentServiceReference.StudentSelect studentSelect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/StudentExamCount", ReplyAction="http://www.rick.com/IStudentService/StudentExamCountResponse")]
        int StudentExamCount(Logic.StudentServiceReference.StudentSelect studentSelect);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/CurrenExam", ReplyAction="http://www.rick.com/IStudentService/CurrenExamResponse")]
        Logic.StudentServiceReference.Exam CurrenExam(Logic.StudentServiceReference.Exam exam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/CurrentTesting", ReplyAction="http://www.rick.com/IStudentService/CurrentTestingResponse")]
        Logic.StudentServiceReference.TestingContent[] CurrentTesting(Logic.StudentServiceReference.TestingContent testingContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/AddExamRecord", ReplyAction="http://www.rick.com/IStudentService/AddExamRecordResponse")]
        int AddExamRecord(Logic.StudentServiceReference.ExamRecord examRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/StudentExamNotice", ReplyAction="http://www.rick.com/IStudentService/StudentExamNoticeResponse")]
        Logic.StudentServiceReference.Exam[] StudentExamNotice(Logic.StudentServiceReference.StudentExam studentExam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rick.com/IStudentService/TakeExamAbout", ReplyAction="http://www.rick.com/IStudentService/TakeExamAboutResponse")]
        Logic.StudentServiceReference.ExamAbout TakeExamAbout(Logic.StudentServiceReference.ExamAbout examAbout);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentServiceChannel : Logic.StudentServiceReference.IStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceClient : System.ServiceModel.ClientBase<Logic.StudentServiceReference.IStudentService>, Logic.StudentServiceReference.IStudentService {
        
        public StudentServiceClient() {
        }
        
        public StudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Logic.StudentServiceReference.StudentExam[] StudentExam(Logic.StudentServiceReference.StudentSelect studentSelect) {
            return base.Channel.StudentExam(studentSelect);
        }
        
        public int StudentExamCount(Logic.StudentServiceReference.StudentSelect studentSelect) {
            return base.Channel.StudentExamCount(studentSelect);
        }
        
        public Logic.StudentServiceReference.Exam CurrenExam(Logic.StudentServiceReference.Exam exam) {
            return base.Channel.CurrenExam(exam);
        }
        
        public Logic.StudentServiceReference.TestingContent[] CurrentTesting(Logic.StudentServiceReference.TestingContent testingContent) {
            return base.Channel.CurrentTesting(testingContent);
        }
        
        public int AddExamRecord(Logic.StudentServiceReference.ExamRecord examRecord) {
            return base.Channel.AddExamRecord(examRecord);
        }
        
        public Logic.StudentServiceReference.Exam[] StudentExamNotice(Logic.StudentServiceReference.StudentExam studentExam) {
            return base.Channel.StudentExamNotice(studentExam);
        }
        
        public Logic.StudentServiceReference.ExamAbout TakeExamAbout(Logic.StudentServiceReference.ExamAbout examAbout) {
            return base.Channel.TakeExamAbout(examAbout);
        }
    }
}
